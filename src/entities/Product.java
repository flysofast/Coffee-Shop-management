package entities;
// Generated Sep 20, 2015 7:16:35 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name="Product"
    ,schema="dbo"
    ,catalog="CoffeeShopAptech"
)
public class Product  implements java.io.Serializable {


     private Integer id;
     private Category category;
     private Publisher publisher;
     private Unit unit;
     private String name;
     private String description;
     private Date importDate;
     private int quantity;
     private boolean isActive;
     private Set<ProductBill> productBills = new HashSet<ProductBill>(0);
     private Set<Price> prices = new HashSet<Price>(0);

    public Product() {
    }

	
    public Product(Category category, Unit unit, String name, int quantity, boolean isActive) {
        this.category = category;
        this.unit = unit;
        this.name = name;
        this.quantity = quantity;
        this.isActive = isActive;
    }
    public Product(Category category, Publisher publisher, Unit unit, String name, String description, Date importDate, int quantity, boolean isActive, Set<ProductBill> productBills, Set<Price> prices) {
       this.category = category;
       this.publisher = publisher;
       this.unit = unit;
       this.name = name;
       this.description = description;
       this.importDate = importDate;
       this.quantity = quantity;
       this.isActive = isActive;
       this.productBills = productBills;
       this.prices = prices;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="ID", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CategoryID", nullable=false)
    public Category getCategory() {
        return this.category;
    }
    
    public void setCategory(Category category) {
        this.category = category;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PublisherID")
    public Publisher getPublisher() {
        return this.publisher;
    }
    
    public void setPublisher(Publisher publisher) {
        this.publisher = publisher;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="UnitID", nullable=false)
    public Unit getUnit() {
        return this.unit;
    }
    
    public void setUnit(Unit unit) {
        this.unit = unit;
    }

    
    @Column(name="Name", nullable=false)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="Description")
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="ImportDate", length=23)
    public Date getImportDate() {
        return this.importDate;
    }
    
    public void setImportDate(Date importDate) {
        this.importDate = importDate;
    }

    
    @Column(name="Quantity", nullable=false)
    public int getQuantity() {
        return this.quantity;
    }
    
    public void setQuantity(int quantity) {
        this.quantity = quantity;
    }

    
    @Column(name="IsActive", nullable=false)
    public boolean isIsActive() {
        return this.isActive;
    }
    
    public void setIsActive(boolean isActive) {
        this.isActive = isActive;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="product")
    public Set<ProductBill> getProductBills() {
        return this.productBills;
    }
    
    public void setProductBills(Set<ProductBill> productBills) {
        this.productBills = productBills;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="product")
    public Set<Price> getPrices() {
        return this.prices;
    }
    
    public void setPrices(Set<Price> prices) {
        this.prices = prices;
    }




}


